<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ph.vuelx03.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.ph.vuelx03.entity.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="encrypted_password" jdbcType="VARCHAR" property="encryptedPassword" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, encrypted_password, salt, mobile, state, department_id, role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zk_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

    <select id="list" parameterType="java.lang.String" resultMap="BaseResultMap">
    select u.*,r.name from zk_user u left join zk_role r  on u.role_id =r.role_id
    where username like CONCAT('%',#{username},'%')
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zk_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ph.vuelx03.entity.User">
    insert into zk_user (user_id, username, encrypted_password, 
      salt, mobile, state, 
      department_id, role_id)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{encryptedPassword,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{departmentId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
  </insert>

  <insert id="add" parameterType="com.ph.vuelx03.entity.User">
    insert into zk_user (username, encrypted_password,
      salt, mobile, state,
      department_id, role_id)
    values (#{username,jdbcType=VARCHAR}, #{encryptedPassword,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
      #{departmentId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelective" parameterType="com.ph.vuelx03.entity.User">
    insert into zk_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="encryptedPassword != null">
        encrypted_password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="encryptedPassword != null">
        #{encryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ph.vuelx03.entity.User">
    update zk_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="encryptedPassword != null">
        encrypted_password = #{encryptedPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ph.vuelx03.entity.User">
    update zk_user
    set username = #{username,jdbcType=VARCHAR},
      encrypted_password = #{encryptedPassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>